version: "3.7"

networks:
  jarvis:
    external: false

services:
  caddy:
    image: caddy:latest
    container_name: caddy
    restart: unless-stopped
    hostname: caddy
    networks:
      - jarvis
    ports:
      - 80:80
      - 443:443
    environment:
      - DOMAIN
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - $CONFIG_DIR:/config
      - $DATA_DIR:/data

  cadvisor:
    image: google/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    hostname: cadvisor
    networks:
      - jarvis
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /cgroup:/cgroup:ro

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    user: root
    hostname: grafana
    networks:
      - jarvis
    ports:
      - 3000:3000
    depends_on:
      - cadvisor
      - node_exporter
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_USER
      - GF_SECURITY_ADMIN_PASSWORD
      - GF_USERS_ALLOW_SIGN_UP
    volumes:
      - $CONFIG_DIR/grafana:/var/lib/grafana
      - $CONFIG_DIR/grafana/provisioning:/etc/grafana/provisioning

  homer:
    image: b4bz/homer:latest
    container_name: homer
    restart: unless-stopped
    hostname: homer
    networks:
      - jarvis
    volumes:
      - $CONFIG_DIR/homer/:/www/assets

  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    restart: unless-stopped
    hostname: node_exporter
    networks:
      - jarvis
    ports:
      - 9100:9100
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro

  overseerr:
    image: sctx/overseerr:latest
    container_name: overseerr
    restart: unless-stopped
    hostname: overseerr
    networks:
      - jarvis
    ports:
      - 5055:5055
    depends_on:
      - plex
    environment:
      - TZ=Europe/London
      - LOG_LEVEL=info
    volumes:
      - $CONFIG_DIR/overseerr:/app/config/

  plex:
    image: plexinc/pms-docker:latest
    container_name: plex
    restart: unless-stopped
    hostname: plex
    networks:
      - jarvis
    ports:
      - 1900:1900/udp
      - 3005:3005/tcp
      - 32400:32400/tcp
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
      - 32469:32469/tcp
      - 8324:8324/tcp
    environment:
      - ADVERTISE_IP="http://$DOMAIN:32400"
      - VERSION=latest
    volumes:
      - $CONFIG_DIR/plex:/config
      - $DATA_DIR/media:/data
      - $DATA_DIR/transcode:/transcode

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    hostname: prometheus
    user: root
    networks:
      - jarvis
    ports:
      - 9090:9090
    depends_on:
      - cadvisor
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=200h'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    volumes:
      - $CONFIG_DIR/prometheus/config.yml:/etc/prometheus/prometheus.yml
      - $CONFIG_DIR/prometheus/:/prometheus

  tautulli:
    image: linuxserver/tautulli:latest
    container_name: tautulli
    restart: unless-stopped
    hostname: tautulli
    networks:
        - jarvis
    ports:
      - 8181:8181
    depends_on:
      - plex
    environment:
      - TZ=Europe/London
    volumes:
      - $CONFIG_DIR/tautulli:/config
      - $CONFIG_DIR/plex/Library/Application Support/Plex Media Server/Logs/:/logs

  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    restart: unless-stopped
    networks:
      - jarvis
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
